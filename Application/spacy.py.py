# -*- coding: utf-8 -*-
"""Applikation.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wm8jq0iCRtGdXziBj0hhspQBfDUEjGxO
"""

import pathlib
from typing import Union
import joblib
import pandas as pd

# Define Function to Predict Spam
def predict_Spam_spacy(email_content: Union[str, None], metadata_content: Union[str, None],
path_to_model: pathlib.Path, metadata_used: Union[bool, None]):
      """
      Predicts if an email is spam or not using a spacy model.
      :param email_content:
      :param metadata_content:
      :param path_to_model:
      :param metadata_used:
      :return:
      """
      # Prepare Data and find appropiate model
      if metadata_used:
        data = pd.Series([metadata_content, email_content])
        full_model_path = pathlib.Path.joinpath(path_to_model, "model_meta.joblib")
      else:
        data = pd.Series(email_content)
        full_model_path = pathlib.Path.joinpath(path_to_model, "loaded_model.joblib")

      # Load model
      pipe, punctuations, stop_words, parser, spacy_tokenizer, predictors, bow_vector = joblib.load(full_model_path)


      # Make predictions
      prediction = pipe.predict(data, verbose=1)
      print(prediction[0][0])
      return prediction[0][0]

if __name__ == '__main__':
    predict_Spam_spacy(
        email_content="Hello, could you please send me the report ?",
        metadata_content="This is a test metadata",
        path_to_model=pathlib.Path.joinpath(pathlib.Path.cwd(), "models", "text", "Spacy"),
        metadata_used=False
    )